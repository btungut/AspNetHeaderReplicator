name: feature CI

on:
  workflow_dispatch:
  push:
    branches:
      - feature/*
    paths-ignore: 
      - 'README'
      - 'README.md'
      - 'LICENSE'
      - '.github/workflows/**'
      - '.github/actions/**'
      - 'Dockerfile'
      - 'Dockerfile.*'
      - 'docker-compose.yml'
      - 'docker-compose.*.yml'

run-name: v${{ github.run_number }}-r${{ github.run_attempt }}

jobs:
  build_and_test:
    env:
      RAW_COVERAGE_DIR: ./coverage
    name: build_and_test
    runs-on: ${{ vars.DEFAULT_RUNS_ON }}

    steps:
      - uses: btungut/devops/.github/actions/common@master
        id: common

      - uses: btungut/devops/.github/actions/git-checkout@master
        with:
          gitToken: ${{ secrets.GITHUB_TOKEN }}
      
      - name: dotnet_restore_and_build
        id: dotnet_restore_and_build
        shell: bash
        run: |
          set -euo pipefail
          dotnet restore
          dotnet build -c Release
        working-directory: app

        # run tests and publish cobertura report
      - name: dotnet_test
        id: dotnet_test
        shell: bash
        run: |
          set -euo pipefail
          dotnet test --collect:"XPlat Code Coverage" --results-directory ${RAW_COVERAGE_DIR} -c Release --no-build --no-restore --verbosity normal
          cd ${RAW_COVERAGE_DIR}
          ls -al
        working-directory: app/tests

      - name: upload_coverage_report
        id: upload_coverage_report
        if: always()
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          directory: ${{ env.RAW_COVERAGE_DIR }}
          files: coverage.cobertura.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true