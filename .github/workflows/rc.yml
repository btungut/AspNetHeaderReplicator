name: release candidate

on:
  workflow_dispatch:
    inputs:
      DOTNET_PACK_VERBOSITY:
        description: 'Verbosity level for dotnet pack: quiet, minimal, normal, detailed, diagnostic'
        required: false
        default: 'minimal'
        type: string
  push:
    branches:
      - rc/v*
    paths-ignore: 
      - 'README'
      - 'README.md'
      - 'LICENSE'
      # - '.github/**'

run-name: ${{ github.ref_name }} - ${{ github.event.head_commit.message }}


jobs:
  build_and_test:
    name: build_and_test
    runs-on: ${{ vars.DEFAULT_RUNS_ON }}
    env:
      DOTNET_VERBOSITY: ${{ github.event.inputs.DOTNET_PACK_VERBOSITY }}
      
    steps:
      - uses: btungut/devops/.github/actions/common@master
        id: common

        
      - uses: btungut/devops/.github/actions/git-checkout@master
        with:
          gitToken: ${{ secrets.GITHUB_TOKEN }}

      - name: iteration_vars
        id: iteration_vars
        shell: bash
        run: |
          set -euo pipefail

          BRANCH_VERSION="${{ steps.common.outputs.branch-version }}"
          if [ -z "$BRANCH_VERSION" ]; then
              echo "steps.common.outputs.branch-version is null or empty whitespace!"
              exit 1
          fi
          echo -e "\nsteps.common.outputs.branch-version = $BRANCH_VERSION\n"


      - uses: ./app/.github/actions/dotnet-common
        with:
          dir-sln: app
          dir-src-project: app/src
          dir-unit-tests: app/tests
          dir-integration-tests: app/tests_integration
      
      - name: dotnet_pack
        id: dotnet_pack
        shell: bash
        run: |
          set -euo pipefail
          echo "PWD = $(pwd)"

          OUTPUT_DIR="${{ runner.temp }}/.nuget"
          echo "OUTPUT_DIR=$OUTPUT_DIR" >> $GITHUB_ENV
          echo "OUTPUT_DIR=$OUTPUT_DIR"
          rm -rf $OUTPUT_DIR
          mkdir -p $OUTPUT_DIR
          
          PACKAGE_VERSION="${{ steps.common.outputs.branch-version }}-rc${{ steps.common.outputs.rev-unique }}"
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$PACKAGE_VERSION"

          dotnet pack \
            -c Release \
            --verbosity $DOTNET_VERBOSITY \
            --no-build \
            --no-restore \
            -p:PackageVersion="$PACKAGE_VERSION" \
            --output $OUTPUT_DIR

          echo -e "\n\nls for $OUTPUT_DIR\n"
          ls -al $OUTPUT_DIR

        working-directory: app/src

      - name: upload_artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.OUTPUT_DIR }}
          name: NuGet-${{ env.PACKAGE_VERSION }}
          if-no-files-found: error
          include-hidden-files: true