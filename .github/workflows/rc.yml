name: release candidate

on:
  workflow_dispatch:
  push:
    branches:
      - rc/v*
    paths-ignore: 
      - 'README'
      - 'README.md'
      - 'LICENSE'
      # - '.github/**'

run-name: ${{ github.ref_name }} - ${{ github.sha }}

jobs:
  build_and_test:
    name: build_and_test
    runs-on: ${{ vars.DEFAULT_RUNS_ON }}
    env:
      DOTNET_NUGET_DIR: ${{ github.env.RUNNER_TEMP }}/.nuget
      

    steps:
      - uses: btungut/devops/.github/actions/common@master
        id: common

        
      - uses: btungut/devops/.github/actions/git-checkout@master
        with:
          gitToken: ${{ secrets.GITHUB_TOKEN }}

      - name: iteration_vars
        id: iteration_vars
        shell: bash
        run: |
          set -euo pipefail

          BRANCH_VERSION="${{ steps.common.outputs.branch-version }}"
          if [ -z "$BRANCH_VERSION" ]; then
              echo "steps.common.outputs.branch-version is null or empty whitespace!"
              exit 1
          fi
          echo -e "\nsteps.common.outputs.branch-version = $BRANCH_VERSION\n"


      - uses: ./app/.github/actions/dotnet-common
        with:
          dir-sln: app
          dir-src-project: app/src
          dir-unit-tests: app/tests
          dir-integration-tests: app/tests_integration
      
      - name: dotnet_pack
        id: dotnet_pack
        shell: bash
        run: |
          set -euo pipefail
          echo "PWD = $(pwd)"

          rm -rf ${{ env.DOTNET_NUGET_DIR }}
          mkdir -p ${{ env.DOTNET_NUGET_DIR }}
          PACKAGE_VERSION="${{ steps.common.outputs.branch-version }}-rc${{ steps.common.outputs.rev-unique }}"

          dotnet pack \
            -c Release \
            --verbosity detailed \
            --no-build \
            --no-restore \
            -p:PackageVersion="$PACKAGE_VERSION" \
            --output ${{ env.DOTNET_NUGET_DIR }}

          echo -e "\n\nls for ${{ env.DOTNET_NUGET_DIR }}\n"
          ls -al ${{ env.DOTNET_NUGET_DIR }}

        working-directory: app/src
